@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div>
    <h1>Azure SignalR Serverless Sample</h1>
    <div id="messages"></div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        let messages = document.querySelector('#messages');
        
        // The baseUrl of your azure functions you have deployed
        // In a live environment instead of using axios to make the call to negotiate, 
        // we will most likely be calling this function from the graphql so how we get 
        // the access token and signalr url will be different
        let baseUrl = "https://phill-testdev.azurewebsites.net"; 
        let userID = "phillID";

        axios.get(baseUrl + `/api/negotiate?userid=${userID}`).then(response => {
            const options = {
                accessTokenFactory: () => response.data.accessToken
            }
            const connection = new signalR.HubConnectionBuilder()
                .withUrl(response.data.url, options)
                .build(signalR.HttpTransportType.None)

            connection.on('stateUpdated', (data) => {
                document.getElementById("messages").innerHTML = data;
            });
            connection.onclose(() => console.log('disconnected'));
            console.log('connecting...');

            connection.start({ withCredentials: false })
                .then(
                    async () => {
                        console.log('ready...');

                        // After the connection is enabled we will subscribe to a ride for updates.
                        // The ride status group is currently in the format "ride-{id}"
                        var val = await connection.invoke("subscribeToRide", "ride-0", userID)
                            .catch(console.error);
                        console.log(val);
                    })
                .catch(console.error);
        });

    </script>
</div>
